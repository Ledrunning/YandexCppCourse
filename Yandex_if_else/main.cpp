#include<iostream>
using namespace std;

int main(int argc, char* argv[])
{
	int menu;
	cout << "Введите номер задачи ->" << endl;
	cin >> menu;
		switch (menu)
		{
				case 1:
				{
					// Даны три целых числа. Найдите наибольшее из них (программа должна вывести ровно одно целое число). 
					// Под наибольшим в этой задаче понимается число, которое не меньше, чем любое другое.
					int a, b, c;
					cin >> a >> b >> c;

					if (a >= b && a >= c)
						cout << a;
					else if (b >= a && b >= c)
						cout << b;
					else if (c >= a && c >= b)
						cout << c;
				}
				break;

				case 2:
				{
					// Даны три натуральных числа A, B, C. Определите, существует ли треугольник с такими сторонами. 
					// Если треугольник существует, выведите строку YES, иначе выведите строку NO.
					int a, b, c;
					cin >> a >> b >> c;
					if (a < b + c && b < a + c && c < a + b)
					{
						cout << "YES";
					}
					else
					{
						cout << "NO";
					}
				}
				break;
				case 3:
				{
					// Даны три целых числа. Определите, сколько среди них совпадающих. 
					// Программа должна вывести одно из чисел: 3 (если все совпадают), 
					// 2 (если два совпадает) или 0 (если все числа различны).
					int a, b, c;
					cin >> a >> b >> c;

					if (a == b && a == c && b == c)
						cout << 3;
					else if (a == b || a == c || b == c || a == b)
						cout << 2;
					else
						cout << 0;
				}
				break;
				case 4:
				{
					// Шахматная ладья ходит по горизонтали или вертикали.Даны две различные клетки шахматной доски, 
					// определите, может ли ладья попасть с первой клетки на вторую одним ходом.
					int a, b, c, d;
					cin >> a >> b >> c >> d;
					if (a == c || b == d)
						cout << "Yes";
					else
						cout << "No";
				}
				break;
				case 5:
				{
					// Шахматный король ходит по горизонтали, вертикали и диагонали, но только на 1 клетку. 
					// Даны две различные клетки шахматной доски, определите, может ли король попасть с первой 
					// клетки на вторую одним ходом.
					int x1, y1, x2, y2;

					cin >> x1 >> y1 >> x2 >> y2;

					if ((x1 - x2 <= 1 && x1 - x2 >= -1) && (y1 - y2 <= 1 && y1 - y2 >= -1))
					{
						cout << "YES";
					}
					else
					{
						cout << "NO";
					}

				}
				break;

				case 6:
				{
					// Шахматный слон ходит по диагонали.
					// Даны две различные клетки шахматной доски,
					// определите, может ли слон попасть с первой клетки на вторую одним ходом.

					int x1, y1, x2, y2;

					cin >> x1 >> y1 >> x2 >> y2;

					if (y1 - y2 == x1 - x2 || y1 - y2 == -(x1 - x2))
					{
						cout << "YES";
					}
					else
					{
						cout << "NO";
					}
				} break;

				case 7:
				{
					// Шахматный ферзь ходит по диагонали, горизонтали или вертикали.
					// Даны две различные клетки шахматной доски, определите, может ли ферзь попасть 
					// с первой клетки на вторую одним ходом.
					int x1, y1, x2, y2;

					cin >> x1 >> y1 >> x2 >> y2;

					int d_x = x1 - x2;
					int d_y = y1 - y2;

					if (d_x != 0 && d_y != 0)
					{
						if (d_x == d_y || d_x == -d_y)
						{
							cout << "YES";
						}
						else
						{
							cout << "NO";
						}
					}
					else if (d_x != 0 || d_y != 0)
					{
						cout << "YES";
					}
					else
					{
						cout << "NO";
					} int x1, y1, x2, y2;

					cin >> x1 >> y1 >> x2 >> y2;

					int d_x = x1 - x2;
					int d_y = y1 - y2;

					if (d_x != 0 && d_y != 0)
					{
						if (d_x == d_y || d_x == -d_y)
						{
							cout << "YES";
						}
						else
						{
							cout << "NO";
						}
					}
					else if (d_x != 0 || d_y != 0)
					{
						cout << "YES";
					}
					else
					{
						cout << "NO";
					}
				}
				break;
				case 8:
				{
					// Шахматный конь ходит буквой “Г” — на две клетки по вертикали в любом направлении 
					// и на одну клетку по горизонтали, или наоборот. Даны две различные клетки шахматной доски, 
					// определите, может ли конь попасть с первой клетки на вторую одним ходом.
					int x1, y1, x2, y2;

					cin >> x1 >> y1 >> x2 >> y2;

					int d_x = x1 - x2;
					int d_y = y1 - y2;

					bool step_x = (abs(d_x) == 2);
					bool step_y = (abs(d_y) == 2);
					bool side_x = (abs(d_x) == 1);
					bool side_y = (abs(d_y) == 1);

					if ((step_x && side_y) || (step_y && side_x))
					{
						cout << "YES";
					}
					else
					{
						cout << "NO";
					}

				}
				break;

				case 9:
				{
					// Шоколадка имеет вид прямоугольника, разделенного на N×M долек. 
					// Шоколадку можно один раз разломить по прямой на две части. 
					// Определите, можно ли таким образом отломить от шоколадки ровно K долек.

					int n, m, k;

					cin >> n >> m >> k;

					int square = n * m;
					bool enough = (k <= square);
					int rem = square - k;

					if (enough && (rem % n == 0 || rem % m == 0))
					{
						cout << "YES";
					}
					else 
					{
						cout << "NO";
					}
				}
				break;
				case 10:
				{
					// Яша плавал в бассейне размером N×M метров и устал. 
					// В этот момент он обнаружил, что находится на расстоянии X метров от
					// одного из длинных бортиков (не обязательно от ближайшего) и 
					// Y метров от одного из коротких бортиков. Какое минимальное расстояние должен проплыть Яша, 
					// чтобы выбраться из бассейна на бортик?

					int n, m, x, y, k, l, u, i;
					cin >> n >> m >> x >> y;
					if (n > m) {
						k = n;
						n = m;
						m = k;
					}
					if ((n - x < x) && (n - x < m - y) && (n - x < y)) {
						cout << n - x;
					}
					else if ((x < n - x) && (x < m - y) && (x < y)) {
						cout << x;
					}
					else if ((m - y < x) && (m - y < y) && (m - y < n - x)) {
						cout << m - y;
					}
					else {
						cout << y;
					}
				}
				break;
				case 11:
				{
					// Дано три числа. Упорядочите их в порядке неубывания.
					cin >> a >> b >> c;

					if (a > b)
					{
						swap(a, b);
					}
					if (b > c)
					{
						swap(b, c);
					}
					if (a > b)
					{
						swap(a, b);
					}

					cout << a << ' ' << b << ' ' << c;
				}
				break;
				case 12:
				{
					// Есть две коробки, первая размером A1×B1×C1, вторая размером A2×B2×C2. 
					// Определите, можно ли разместить одну из этих коробок внутри другой, при условии, 
					// что поворачивать коробки можно только на 90 градусов вокруг ребер.

					int a1, b1, c1, a2, b2, c2;

					cin >> a1 >> b1 >> c1 >> a2 >> b2 >> c2;

					if (a1 > b1) 
					{
						swap(a1, b1);
					}
					if (b1 > c1) 
					{
						swap(b1, c1);
					}
					if (a1 > b1) 
					{
						swap(a1, b1);
					}

					if (a2 > b2) 
					{
						swap(a2, b2);
					}
					if (b2 > c2) 
					{
						swap(b2, c2);
					}
					if (a2 > b2) 
					{
						swap(a2, b2);
					}

					if (a1 == a2 && b1 == b2 && c1 == c2) 
					{
						cout << "Boxes are equal";
					}
					else if (a1 >= a2 && b1 >= b2 && c1 >= c2)
					{
						cout << "The first box is larger than the second one";
					}
					else if (a1 <= a2 && b1 <= b2 && c1 <= c2) 
					{
						cout << "The first box is smaller than the second one";
					}
					else 
					{
						cout << "Boxes are incomparable";
					}
				}
				break;
	}
	
	
	system ("pause>NUL");
	return 0;
}